name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  composer:
    runs-on: ubuntu-latest

    name: PHP (Latest) - Build and Archive
    steps:
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        uses: php-actions/composer@v6
        with:
          command: validate

      - name: Cache Composer Dependencies
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ./src/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer Dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        uses: php-actions/composer@v6
        with:
          php_version: latest

      - name: Create Build Archive for Tests
        run: |
          mkdir /tmp/builds/ && tar -cvf /tmp/builds/build.tar ./

      - name: Upload Build Archive for Tests
        uses: actions/upload-artifact@v3
        with:
          name: build-archive-php
          path: /tmp/builds
          retention-days: 1

  phpstan:
    runs-on: ubuntu-latest
    needs: [composer]

    name: PHPStan - FOSSBilling Preview
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build-archive-php
          path: /tmp/builds

      - name: Extract build archive
        run: tar -xvf /tmp/builds/build.tar ./

      - name: Checkout FOSSBilling Source Code
        uses: actions/checkout@v2
        with:
          repository: "FOSSBilling/FOSSBilling"
          path: "FOSSBilling"

      # We manually run composer commands because of this issue: https://github.com/php-actions/composer/issues/100
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: latest
          tools: composer

      - name: Install Composer Dependencies
        run: composer install --no-progress --no-dev --no-interaction
        working-directory: FOSSBilling

      - name: Run PHPStan
        uses: php-actions/phpstan@v3
        with:
          php_version: latest
          configuration: phpstan.neon
          memory_limit: 512M

  phpstan-release:
    runs-on: ubuntu-latest
    needs: [composer]

    name: PHPStan - FOSSBilling Release
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build-archive-php
          path: /tmp/builds

      - name: Extract build archive
        run: tar -xvf /tmp/builds/build.tar ./

      - name: Get the Latest FOSSBilling Release Tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: "FOSSBilling/FOSSBilling"
          releases-only: true
        id: get_id

      - name: Checkout FOSSBilling The Release tag
        uses: actions/checkout@v3
        with:
          repository: "FOSSBilling/FOSSBilling"
          path: "FOSSBilling"
          ref: ${{ steps.get_id.outputs.tag }}

      # We manually run composer commands because of this issue: https://github.com/php-actions/composer/issues/100
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: latest
          tools: composer

      - name: Install Composer Dependencies (<=0.4.x)
        if: ${{ hashFiles('/FOSSBilling/src/composer.json') }}
        run: composer install --no-progress --no-dev --no-interaction
        working-directory: FOSSBilling/src

      - name: Install Composer Dependencies (>=0.5.0)
        if: ${{ hashFiles('/FOSSBilling/composer.json') }}
        run: composer install --no-progress --no-dev --no-interaction
        working-directory: FOSSBilling/

      - name: Run PHPStan
        uses: php-actions/phpstan@v3
        with:
          php_version: latest
          configuration: phpstan.neon
          memory_limit: 512M
